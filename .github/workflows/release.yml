name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        default: 'v0.0.1'

permissions:
  contents: write
  id-token: write

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  build-release:
    name: Build ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: FreeBSD-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-freebsd
            bin: rustmat
            name: rustmat-FreeBSD-x86_64.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: rustmat.exe
            name: rustmat-Windows-x86_64.zip
            command: build

          - release_for: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: rustmat.exe
            name: rustmat-Windows-aarch64.zip
            command: build

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: rustmat
            name: rustmat-Darwin-x86_64.tar.gz
            command: build

          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: rustmat
            name: rustmat-Darwin-aarch64.tar.gz
            command: build

          - release_for: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: rustmat
            name: rustmat-Linux-x86_64.tar.gz
            command: build

          - release_for: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bin: rustmat
            name: rustmat-Linux-aarch64.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install BLAS/LAPACK dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libopenblas-dev liblapack-dev

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release --bin rustmat --features blas-lapack"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustmat-${{ matrix.platform.release_for }}
          path: "rustmat-*"

  create-release:
    name: Create Release
    needs: [build-release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: RustMat ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## RustMat ${{ github.event.inputs.version || github.ref_name }}
            
            High-performance MATLAB/Octave runtime with Jupyter kernel support.
            
            ### Installation
            
            #### Quick Install (Recommended)
            ```bash
            # Linux/macOS
            curl -fsSL https://rustmat.com/install.sh | sh
            
            # Windows (PowerShell)
            iwr https://rustmat.com/install.ps1 | iex
            ```
            
            #### Manual Installation
            1. Download the appropriate binary for your platform below
            2. Extract the archive
            3. Add the binary to your PATH
            
            ### What's New
            - Enhanced Jupyter plotting with WebAssembly widgets
            - Improved performance for matrix operations
            - Bug fixes and stability improvements
            
            ### Documentation
            - [Getting Started](https://rustmat.com/docs/getting-started)
            - [API Reference](https://rustmat.com/docs/api)
            - [Examples](https://rustmat.com/docs/examples)
          files: |
            artifacts/**/*
          draft: false
          prerelease: false
